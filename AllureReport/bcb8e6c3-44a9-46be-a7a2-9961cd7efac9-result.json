{"name": "test_Add_Emp_003", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"submit\" class=\"oxd-button oxd-button--medium oxd-button--secondary orangehrm-left-space\" data-v-10d463b7=\"\" data-v-7fe2d320=\"\">...</button> is not clickable at point (669, 531). Other element would receive the click: <div class=\"oxd-form-loader\" data-v-d5bfe35b=\"\">...</div>\n  (Session info: headless chrome=115.0.5790.171)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x00FBA813+48355]\n\t(No symbol) [0x00F4C4B1]\n\t(No symbol) [0x00E55358]\n\t(No symbol) [0x00E85062]\n\t(No symbol) [0x00E83B98]\n\t(No symbol) [0x00E8239B]\n\t(No symbol) [0x00E8179E]\n\t(No symbol) [0x00E79F5C]\n\t(No symbol) [0x00E9A73C]\n\t(No symbol) [0x00E79A36]\n\t(No symbol) [0x00E9AA94]\n\t(No symbol) [0x00EAC922]\n\t(No symbol) [0x00E9A536]\n\t(No symbol) [0x00E782DC]\n\t(No symbol) [0x00E793DD]\n\tGetHandleVerifier [0x0121AABD+2539405]\n\tGetHandleVerifier [0x0125A78F+2800735]\n\tGetHandleVerifier [0x0125456C+2775612]\n\tGetHandleVerifier [0x010451E0+616112]\n\t(No symbol) [0x00F55F8C]\n\t(No symbol) [0x00F52328]\n\t(No symbol) [0x00F5240B]\n\t(No symbol) [0x00F44FF7]\n\tBaseThreadInitThunk [0x779900C9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77AD7B1E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77AD7AEE+238]", "trace": "self = <testCases.test_AddEmp.Test_Add_Employee object at 0x000001DCCD6A7610>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"65d95add0bb8221fbb2fb3578674400f\")>\n\n    def test_Add_Emp_003(self,setup):\n        self.diver = setup\n        self.log.info(\"test_Add_Emp_003 is started\")\n        self.log.info(\"Oening Browser\")\n        self.diver.get(self.Url)\n        self.log.info(\"Opening_Url--->\" + self.Url)\n        self.lp = loginPage(self.diver)\n        self.lp.Enter_UserName(self.Username)\n        self.log.info(\"Entering Username--->\" + self.Username)\n        # self.lp.Enter_UserName(\"Admin\")\n        self.lp.Enter_Password(self.Password)\n        self.log.info(\"Entering Password--->\" + self.Password)\n        # self.lp.Enter_Password(\"admin123\")\n        self.lp.Click_Login()\n        self.log.info(\"Click Login Button\")\n        self.ae = AddEmployee(self.diver)\n        self.ae.Click_PIM()\n        self.log.info(\"Click PIM Button\")\n        self.ae.Click_Add()\n        self.log.info(\"Click Add Customer Button\")\n        self.ae.Enter_Firstname(\"jhon\")\n        self.log.info(\"Entering first name Jhon\")\n        self.ae.Enter_Middlename(\"jay\")\n        self.log.info(\"Entering Middle Name--jay\")\n        self.ae.Enter_lastname(\"bush\")\n        self.log.info(\"Entering Lastname---bush\")\n>       self.ae.Click_Save()\n\ntestCases\\test_AddEmp.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageObjects\\Add_Employee.py:35: in Click_Save\n    self.driver.find_element(*AddEmployee.Click_Save_Button_XPATH).click()\nC:\\Users\\HP\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\nC:\\Users\\HP\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:403: in _execute\n    return self._parent.execute(command, params)\nC:\\Users\\HP\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001DCCA6A47D0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77AD7B1E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77AD7AEE+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"submit\" class=\"oxd-button oxd-button--medium oxd-button--secondary orangehrm-left-space\" data-v-10d463b7=\"\" data-v-7fe2d320=\"\">...</button> is not clickable at point (669, 531). Other element would receive the click: <div class=\"oxd-form-loader\" data-v-d5bfe35b=\"\">...</div>\nE         (Session info: headless chrome=115.0.5790.171)\nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x00FBA813+48355]\nE       \t(No symbol) [0x00F4C4B1]\nE       \t(No symbol) [0x00E55358]\nE       \t(No symbol) [0x00E85062]\nE       \t(No symbol) [0x00E83B98]\nE       \t(No symbol) [0x00E8239B]\nE       \t(No symbol) [0x00E8179E]\nE       \t(No symbol) [0x00E79F5C]\nE       \t(No symbol) [0x00E9A73C]\nE       \t(No symbol) [0x00E79A36]\nE       \t(No symbol) [0x00E9AA94]\nE       \t(No symbol) [0x00EAC922]\nE       \t(No symbol) [0x00E9A536]\nE       \t(No symbol) [0x00E782DC]\nE       \t(No symbol) [0x00E793DD]\nE       \tGetHandleVerifier [0x0121AABD+2539405]\nE       \tGetHandleVerifier [0x0125A78F+2800735]\nE       \tGetHandleVerifier [0x0125456C+2775612]\nE       \tGetHandleVerifier [0x010451E0+616112]\nE       \t(No symbol) [0x00F55F8C]\nE       \t(No symbol) [0x00F52328]\nE       \t(No symbol) [0x00F5240B]\nE       \t(No symbol) [0x00F44FF7]\nE       \tBaseThreadInitThunk [0x779900C9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77AD7B1E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77AD7AEE+238]\n\nC:\\Users\\HP\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: ElementClickInterceptedException"}, "attachments": [{"name": "log", "source": "6f039cb4-0fbb-40f7-9897-dd7e858465b4-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "313fc31c-ca7c-4699-a3b8-0d8bdc1f38f5-attachment.txt", "type": "text/plain"}], "start": 1692114139168, "stop": 1692114185465, "uuid": "fdd8cf2c-66eb-4c08-b43c-d58d4e9e7252", "historyId": "558f67e7948a911ca3ea8be41576b219", "testCaseId": "558f67e7948a911ca3ea8be41576b219", "fullName": "testCases.test_AddEmp.Test_Add_Employee#test_Add_Emp_003", "labels": [{"name": "parentSuite", "value": "testCases"}, {"name": "suite", "value": "test_AddEmp"}, {"name": "subSuite", "value": "Test_Add_Employee"}, {"name": "host", "value": "DESKTOP-BHUAMHL"}, {"name": "thread", "value": "4008-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCases.test_AddEmp"}]}