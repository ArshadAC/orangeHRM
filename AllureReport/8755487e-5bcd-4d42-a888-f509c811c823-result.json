{"name": "test_login_002", "status": "failed", "statusDetails": {"message": "AssertionError: assert False", "trace": "self = <testCases.test_Login.Test_Login object at 0x000001DCCD7E71D0>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e6a658eeac3c947135244e393cf8a49b\")>\n\n    @pytest.mark.regression\n    def test_login_002(self, setup):\n        self.driver = setup\n        self.log.info(\"test_login_002 is started\")\n        self.log.info(\"Opening Browser\")\n        self.driver.get(self.Url)\n        self.log.info(\"Opening Url -->\" + self.Url)\n        # driver = webdriver.Firefox()\n        # driver.implicitly_wait(10)\n        # driver.get(\"https://opensource-demo.orangehrmlive.com/\")\n        self.lp = loginPage(self.driver)\n        self.lp.Enter_UserName(self.Username)\n        self.log.info(\"Entering username-->\" + self.Username)\n        # self.lp.Enter_UserName(\"Admin\")\n        # self.driver.find_element(By.XPATH, \"//input[@placeholder='Username']\").send_keys(\"Admin\")\n        self.lp.Enter_Password(self.Password)\n        self.log.info(\"Entering Password -->\" + self.Password)\n        # self.lp.Enter_Password(\"admin123\")\n        # self.driver.find_element(By.XPATH, \"//input[@placeholder='Password']\").send_keys(\"admin123\")\n        self.lp.Click_Login()\n        self.log.info(\"Click on Login Button\")\n        # self.driver.find_element(By.XPATH, \"//button[normalize-space()='Login']\").click()\n        time.sleep(5)\n        # try:\n        #     self.driver.find_element(By.XPATH, \"//span[@class='oxd-userdropdown-tab']\")\n        #     print(\"test_login_001 is Passed\")\n        #     self.driver.find_element(By.XPATH, \"//span[@class='oxd-userdropdown-tab']\").click()\n        #     self.driver.find_element(By.XPATH, \"//a[normalize-space()='Logout']\").click()\n        #     login = True\n        #     # assert True\n        #     print(login)\n        # except Ec:\n        #     print(\"test_login_001 is Failed\")\n        #     print(\"test_login_001 is completed\")\n        #     login = False\n        #     print(login)\n        #     # assert False\n        # if login == True:\n        #     assert True\n        # else:\n        #     assert False\n        # print(self.lp.Login_Status())\n        if self.lp.Login_Status() == True:\n    \n            self.driver.save_screenshot(\"E:\\\\Automation Project\\\\OrangeHRM\\\\Screenshots\\\\test_login_pass.png\")\n            self.lp.Click_Menu_Button()\n            self.log.info(\"Click on Menu Button \")\n            self.lp.Click_Logout()\n            self.log.info(\"Click on Logout Button\")\n            assert True\n        else:\n>           assert False\nE           assert False\n\ntestCases\\test_Login.py:87: AssertionError"}, "attachments": [{"name": "log", "source": "4571902c-c439-479f-85f7-fe60a38b0d65-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "281ab8f8-dd5c-4fcf-881f-778e45403a79-attachment.txt", "type": "text/plain"}], "start": 1692114195598, "stop": 1692114239663, "uuid": "1120ce5f-db7b-40ad-be1c-2f0d5b205301", "historyId": "99f8958a92a829658f144d68effc6c93", "testCaseId": "99f8958a92a829658f144d68effc6c93", "fullName": "testCases.test_Login.Test_Login#test_login_002", "labels": [{"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "testCases"}, {"name": "suite", "value": "test_Login"}, {"name": "subSuite", "value": "Test_Login"}, {"name": "host", "value": "DESKTOP-BHUAMHL"}, {"name": "thread", "value": "4008-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCases.test_Login"}]}